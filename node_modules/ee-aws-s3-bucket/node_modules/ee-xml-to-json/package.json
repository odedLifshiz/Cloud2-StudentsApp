{
  "name": "ee-xml-to-json",
  "description": "convert xml documents to json objects, with support for simple transformation rules",
  "version": "0.1.4",
  "homepage": "https://github.com/eventEmitter/ee-xml-to-json",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "licence": "mit",
  "repository": {
    "url": "https://github.com/eventEmitter/ee-xml-to-json.git",
    "type": "git"
  },
  "engines": {
    "node": ">=v0.10.17"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-xml-to-json/issues"
  },
  "dependencies": {
    "ee-class": "0.4.*",
    "ee-types": "0.1.*",
    "ee-log": "0.2.*",
    "ee-arguments": "0.1.*",
    "ee-error": "0.1.*",
    "xml2js": "0.2.8",
    "moment": "2.4.0"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "scripts": {
    "test": "node test.js"
  },
  "readme": "# ee-xml-to-json\n\nconvert xml documents to json objects, with support for simple transformation rules\n\n## installation\n\n\tnpm install ee-xml-to-json\n\n## build status\n\n[![Build Status](https://travis-ci.org/eventEmitter/ee-xml-to-json.png?branch=master)](https://travis-ci.org/eventEmitter/ee-xml-to-json)\n\n## usage\n\n\n\tvar transform = require( \"ee-xml-to-json\" );\n\n\tvar xmlString = \"<ListBucketResult>\\\n\t\t\t\t\t \t <MaxKeys>1000</MaxKeys>\\\n\t\t\t\t\t \t <Delimiter>/</Delimiter>\\\n\t\t\t\t\t \t <IsTruncated>false</IsTruncated>\\\n\t\t\t\t\t </ListBucketResult>\";\n\n\ttransform( xmlString, function( err, jsonObj ){\n\t\tlog( jsonObj );\n\t} );\n\n\nthe library supports simple transformations from the very verbose format resulting from conversion towards a more compact representation. because every element in xml can occur multiple times the json object consists mainly out of arrays. using the transformations rules you can convert, compact & typecast the json object into a more usable format. see the test directory for more information on the rules.\n\n\n\t// compact the data using rules\n\ttransform( xmlString, {\n\t\t  MaxKeys: \t\t\"max\"\n\t\t, IsTruncated: \t\"truncated\"\n\t}, function( err, jsonObj ){\n\t\tlog( jsonObj );\n\t} );\n\n",
  "readmeFilename": "README.md",
  "_id": "ee-xml-to-json@0.1.4",
  "_from": "ee-xml-to-json@0.1.x"
}
