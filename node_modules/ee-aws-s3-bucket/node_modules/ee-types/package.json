{
  "name": "ee-types",
  "description": "Reliabale type detection",
  "version": "0.1.3",
  "homepage": "https://github.com/eventEmitter/ee-types",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "licence": "MIT",
  "repository": {
    "url": "https://github.com/eventEmitter/ee-types"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-types/issues"
  },
  "dependencies": {
    "ee-class": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "# ee-types\n\nReliabale type detection\n\n## installation\n\t\n\tnpm install ee-types\n\n## usage\n\n\n\tvar type = require( \"ee-types\" );\n\n\n\ttype.string( \"nope\" ); \t\t\t\t\t// true\n\ttype.strign( new String( \"yeah\" ) ); \t// true\n\ttype.s( \"michael\" ); \t\t\t\t\t// true\n\n\n\ttype( 2 ) // number\n\n\n## API\n\n\ttype() // returns the loawercase type\n\n\ttype.string()\n\ttype.number()\n\ttype.boolean()\n\ttype.function()\n\ttype.object() \t\t\t// array, dates, erors, regexps & sometimes strings, numbers and bools are objects\n\ttype.date()\n\ttype.error()\n\ttype.regexp()\n\ttype.array()\n\ttype.buffer()\n\ttype.null()\n\ttype.undefined()\n\nshortcut methods\n\n\ttype.s() // string\n\ttype.n() // number\n\ttype.b() // boolean\n\ttype.u() // undefined\n\ncheck array and their contents. for every type above there is an array method like the one below.\n\n\ttype.stringArray( [ \"hi\", new String( \"name\" ), \"is\", \"michael\" ] )\t // true\n\ttype.sa( [ \"hi\", new String( \"name\" ), \"is\", \"michael\" ] )\t \t\t // true",
  "readmeFilename": "README.md",
  "_id": "ee-types@0.1.3",
  "_from": "ee-types@0.1.x"
}
