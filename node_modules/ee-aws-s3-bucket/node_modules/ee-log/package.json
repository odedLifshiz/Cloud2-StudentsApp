{
  "name": "ee-log",
  "description": "simple, helpful & colorful logs",
  "version": "0.2.18",
  "homepage": "https://github.com/eventEmitter/ee-log",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "licence": "mit",
  "repository": {
    "url": "https://github.com/eventEmitter/ee-log.git",
    "type": "git"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-log/issues"
  },
  "dependencies": {
    "ee-class": "0.4.x",
    "ee-project": "0.2.x",
    "ee-types": "0.1.x"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "keywords": [
    "log",
    "logging",
    "trace",
    "colorful"
  ],
  "scripts": {
    "test": "node test.js"
  },
  "readme": "# ee-log\n\ncolorful, nice formatted logs for node.js\n\nATTENTION: this library should only be used when developing - it makes use of the sysnchronous logging funtionality ( like console.log itself ). you should never use synchronous logging in a live environment, it will slow down your application heavily! The library will be updated soon with asynchronous logging support for live applicaions.\n\n## installation\n\n\tnpm install ee-log\n\n## build status\n\n[![Build Status](https://travis-ci.org/eventEmitter/ee-log.png?branch=master)](https://travis-ci.org/eventEmitter/ee-log)\n\n\n## usage\n\n    var log = require( \"ee-log\" );\n\n\n### debug\n\nprints grey text\n\n    log.debug( \"debug %s ==> %s\", 1, new Buffer( \"whoa!\" ), { go: \"is a cool language!\"} );\n\n    // output: \n    22 13:06:34.935 > test.js:6, Object.<anonymous>                 >>> debug 1 ==> 77 68 6f 61 21 \n\t{\n\t    go: \"is a cool language!\"\n\t}\n\n\n\n\n### info\n\nprints white text\n\n\tlog.info( \"info\" );\n\n\t// output\n\t22 13:06:34.939 > test.js:7, Object.<anonymous>                 >>> info\n\n\n\n\n### warn\n\nprints yellow text\n\n\tlog.warn( \"warn\", new Date(), 455 );\n\n\t// output \n\t22 13:06:34.940 > test.js:8, Object.<anonymous>                 >>> warn, 2013-08-22T11:06:34.939Z, 455\n\n\n\n\n\n### error\n\nprints red text\n\n\tlog.error( \"error\", { \"test\": 3 } );\n\n\t// output\n\t22 13:06:34.940 > test.js:9, Object.<anonymous>                 >>> error\n\n\n\n\n\n### highlight\n\nprints cyan text\n\n\tlog.highlight( \"highlight\" );\n\n\t// output\n\t22 13:06:34.940 > test.js:10, Object.<anonymous>                >>> highlight\n\n\n\n\n\n### dir\n\nprints the items passed to it\n\n\tlog.dir( { hi: 1 } );\n\n\t// output\n\t22 13:16:32.207 > test.js:11, Object.<anonymous>                >>> Dir\n\t{\n\t    hi: 1\n\t}\n\n\n\n\n### trace\n\nprints a colorful error stack trace\n\t\n\tlog.trace( new Error( \"testing the sh*t\" ) );\n\n\t// output\n\t22 13:30:48.899 > /test.js:12, Object.<anonymous>                >>> Trace\n\t--------------------------------------------------------------------------------\n\tError: testing the sh*t\n\t--------------------------------------------------------------------------------\n\t                      /test.js   12:13  Object.<anonymous>\n\t                     module.js  456:26  Module._compile\n\t                     module.js  474:10  Object.Module._extensions..js\n\t                     module.js  356:32  Module.load\n\t                     module.js  312:12  Function.Module._load\n\t                     module.js  497:10  Function.Module.runMain\n\t                       node.js  119:16  startup\n\t                       node.js  901:3   \n\t--------------------------------------------------------------------------------\n\n\n### log method\n\nprints whatever comes, uses log.info for text types\n\n\tlog( 2, \"er %s:%s\", 22, new Error( \"whoa!\" ), \"hui\", new Error( \"\" ), new Buffer(22) );\n\n\t// output\n\t23 14:53:15.480 > /test.js 16:2, Object.<anonymous>               >>> 2\n\t23 14:53:15.480 > /test.js 16:2, Object.<anonymous>               >>> er 22:Error: whoa!\n\t23 14:53:15.480 > /test.js 16:2, Object.<anonymous>               >>> hui\n\t23 14:53:15.482 > /test.js 16:2, Object.<anonymous>               >>> [Trace]\n\t--------------------------------------------------------------------------------\n\tError: -\n\t--------------------------------------------------------------------------------\n\t                      /test.js   16:55  Object.<anonymous>\n\t                     module.js  456:26  Module._compile\n\t                     module.js  474:10  Object.Module._extensions..js\n\t                     module.js  356:32  Module.load\n\t                     module.js  312:12  Function.Module._load\n\t                     module.js  497:10  Function.Module.runMain\n\t                       node.js  119:16  startup\n\t                       node.js  901:3   \n\t--------------------------------------------------------------------------------\n\t23 14:53:15.482 > /test.js 16:2, Object.<anonymous>               >>> 70 ab ac 0 0 0 0 0 3a 0 0 0 3b 0 0 0 f0 34 72 1 0 0 \n\n\n\n### disable logging inside one module\n\t\n\t// call this from inside your module, no logs will be displayed anymore\n\tlog.disable();\n\n\t// enable logging again\n\tlog.enable();\n",
  "readmeFilename": "README.md",
  "_id": "ee-log@0.2.18",
  "_from": "ee-log@0.2.x"
}
