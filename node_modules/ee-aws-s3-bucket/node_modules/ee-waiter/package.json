{
  "name": "ee-waiter",
  "description": "control flow: parallel asynchronous job execution",
  "version": "0.1.1",
  "homepage": "https://github.com/eventEmitter/ee-waiter",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "repository": {
    "url": "https://github.com/eventEmitter/ee-waiter"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-waiter/issues"
  },
  "dependencies": {
    "ee-class": "0.4.*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "contributors": [
    {
      "name": "Michael van der Weg",
      "email": "michael@eventemitter.com",
      "url": "http://eventemitter.com/"
    }
  ],
  "readme": "# parallel control flow library\n\n\n\tvar Waiter = require( \"ee-waiter\" );\n\n\n\tvar waiter = new Waiter( function( err ){\n\t\tif ( err ) console.log( \"there was an erorr:\", err );\n\t\t...\n\t} );\n\n\n\twaiter.add( function( cb ){\n\t\t// do something ..\n\t\tcb();\n\t} );\n\n\twaiter.add( function( cb ){\n\t\t// do something ..\n\t\tcb();\n\t} );\n\n\n\t// start all previosuly defined jobs in parallel\n\twaiter.start();",
  "readmeFilename": "README.md",
  "_id": "ee-waiter@0.1.1",
  "_from": "ee-waiter@0.1.x"
}
