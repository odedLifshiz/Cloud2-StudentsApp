{
  "name": "ee-class",
  "description": "Javascript Class implementation for node.js & ecma script 5 compatible browsers",
  "version": "0.4.0",
  "homepage": "https://github.com/eventEmitter/ee-class",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "licence": "mit",
  "repository": {
    "url": "https://github.com/eventEmitter/ee-class.git",
    "type": "git"
  },
  "engines": {
    "node": ">=v0.10.0"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-class/issues"
  },
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "keywords": [
    "class"
  ],
  "scripts": {
    "test": "node test.js"
  },
  "readme": "# ee-class\n\nJavascript Class implementation for node.js\n\n## installation\n\n    npm install ee-class\n\n\n## build status\n\n[![Build Status](https://travis-ci.org/eventEmitter/ee-class.png?branch=master)](https://travis-ci.org/eventEmitter/ee-class)\n\n\n## usage\n\n    var Class = require( \"ee-class\" );\n\n\n    var LifeForm = new Class( {\n        isAlive: false\n\n        , init: function( options ){\n            this.isAlive = !!options.isAlive;\n        }\n    } );\n\n\n\n    var Human = new Class( {\n        inherits: LifeForm\n        \n        , name: \"\"\n\n        // pay attention to give the function a name so you can reference it when you are calling the parent function\n        , init: function myInitFunction( options ){\n            myInitFunction.parent( options );\n            this.name = options.name;\n        }\n    } );\n\n\n\n    var Boy = new Class( {\n        inherits: Human\n\n        , age: 0\n\n        // pay attention to give the function a name so you can reference it when you are calling the parent function\n        , init: function myInitFunction( options ){\n            myInitFunction.parent( options );\n            if ( options.age > 18 ) throw new Error( \"Too old to be a boy!\" )\n            this.age = options.age;\n        }\n\n\n        , describe: function(){\n            console.log( \"Hi, my name is %s, i'm %s years old and i'm \" + ( this.isAlive ? \"alive :)\" : \"dead :(\" ), this.name, this.age );\n        }\n    } );\n\n\n\n    var fabian = new Boy( {\n          name:     \"fabian\"\n        , age:      15\n        , isAlive:  true\n    } );\n\n    fabian.describe(); // Hi, my name is fabian, i'm 15 years old and i'm alive :)\n\n\n\n# working with propertiy definers\n\nsince version 0.2.7 you may pass an object with object property defintions to the class module.\n\n    var MyClass = new Class({\n        init: function(){\n\n        }\n    } \n    , { \n        _values: {\n            value: {\n                name: 'john doe'\n            }\n        }\n        , name: {\n            get: function(){\n                return this._values.name;\n            }\n            , set: function(newValue){\n                this._values.name = newValue;\n            }\n            , enumerable: true\n        }\n    });\n\n    var x = new MyClass();\n\n    x.name = 'michael';\n    console.log(x.name); // michael\n\n\n# Version History\n\n- 0.1.0: initial version\n- 0.1.3: fixed integration with eventemitter objects\n- 0.2.0: Added proper implementation for calling super functions, deprecated the «parent» property\n- 0.2.1: Bugfix for the «super implementation»\n- 0.2.2: Deprecated the «super» property and replaced it with the «parent» property beacuse super is a javascript reserved keyword\n- 0.2.3: The constructor takes now n instead of 1 arguments\n- 0.2.4: The constructor may now return a function when overriding the class implementation\n- 0.2.6: Classes expose their defintion now via the «Class.definition» proroperty\n- 0.2.7: Added support fo Object.defineProperties()\n- 0.2.8: Removed all occurences of __proto__ in th eclass implementation, replaced the by Object.getPrototypeOf()\n- 0.3.0: Removed the deprecated «parent» property\n- 0.4.0: Removed the default value passed to a class constructor",
  "readmeFilename": "README.md",
  "_id": "ee-class@0.4.0",
  "_from": "ee-class@0.4.x"
}
